
server.port=8081
server.forward-headers-strategy=FRAMEWORK
#TODO:set the client properties based on the authorization server's registeredClient repo
spring.security.oauth2.client.registration.myClient.provider=spring
spring.security.oauth2.client.registration.myClient.client-id=myClient
spring.security.oauth2.client.registration.myClient.client-secret=secret
spring.security.oauth2.client.registration.myClient.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.myClient.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.myClient.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.myClient.scope=openid,profile,authorities
spring.security.oauth2.client.registration.myClient.client-name=Login with My Auth Server ?
# spring.security.oauth2.client.registration.myClient.client-name=

# http://localhost:8083/.well-known/openid-configuration

# logging.level.web=trace
spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:8083
#spring.security.oauth2.client.provider.spring.user-name-attribute=
#spring.security.oauth2.client.provider.spring.user-info-uri=
#spring.security.oauth2.client.provider.spring.user-info-authentication-method=
#spring.security.oauth2.client.provider.spring.token-uri=
#spring.security.oauth2.client.provider.spring.jwk-set-uri=
#spring.security.oauth2.client.provider.spring.authorization-uri=

# logging.level.root=trace
# logging.level.org.springframework.cloud.gateway=trace
# logging.level.org.springframework.cloud.gateway.handler=trace
# logging.level.org.springframework=trace

# spring.session.store-type=redis

logging.level.org.springframework.security=DEBUG
spring.output.ansi.enabled=ALWAYS